#ifndef FONT_H
#define FONT_H

#include <stdint.h>

// Character order: '0'-'9', '+', '-', '*', '/', '=', 'C'
// Indexed using get_font_index(char c)

static const uint8_t font8x8_calc[][8] = {
    // '0'
    { 0x3C, 0x66, 0x6E, 0x7E, 0x76, 0x66, 0x3C, 0x00 },
    // '1'
    { 0x18, 0x38, 0x18, 0x18, 0x18, 0x18, 0x7E, 0x00 },
    // '2'
    { 0x3C, 0x66, 0x06, 0x1C, 0x30, 0x66, 0x7E, 0x00 },
    // '3'
    { 0x3C, 0x66, 0x06, 0x1C, 0x06, 0x66, 0x3C, 0x00 },
    // '4'
    { 0x0C, 0x1C, 0x3C, 0x6C, 0x7E, 0x0C, 0x0C, 0x00 },
    // '5'
    { 0x7E, 0x60, 0x7C, 0x06, 0x06, 0x66, 0x3C, 0x00 },
    // '6'
    { 0x1C, 0x30, 0x60, 0x7C, 0x66, 0x66, 0x3C, 0x00 },
    // '7'
    { 0x7E, 0x66, 0x0C, 0x18, 0x18, 0x18, 0x18, 0x00 },
    // '8'
    { 0x3C, 0x66, 0x66, 0x3C, 0x66, 0x66, 0x3C, 0x00 },
    // '9'
    { 0x3C, 0x66, 0x66, 0x3E, 0x06, 0x0C, 0x38, 0x00 },
    // '+'
    { 0x00, 0x18, 0x18, 0x7E, 0x18, 0x18, 0x00, 0x00 },
    // '-'
    { 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00 },
    // '*'
    { 0x00, 0x66, 0x3C, 0xFF, 0x3C, 0x66, 0x00, 0x00 },
    // '/'
    { 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC0, 0x80, 0x00 },
    // '='
    { 0x00, 0x7E, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00 },
    // 'C'
    { 0x3C, 0x66, 0x60, 0x60, 0x60, 0x66, 0x3C, 0x00 }
};

// Map char to font8x8_calc index, or -1 if unsupported
static inline int get_font_index(char c) {
    if (c >= '0' && c <= '9') return c - '0';
    switch (c) {
        case '+': return 10;
        case '-': return 11;
        case '*': return 12;
        case '/': return 13;
        case '=': return 14;
        case 'C': return 15;
        default:  return -1; // unsupported character
    }
}

#endif // FONT_H
